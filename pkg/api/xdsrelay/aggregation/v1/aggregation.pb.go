// Code generated by protoc-gen-go. DO NOT EDIT.
// source: xdsrelay/aggregation/v1/aggregation.proto

package aggregation

import (
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NodeFieldType int32

const (
	NodeFieldType_NODE_ID               NodeFieldType = 0
	NodeFieldType_NODE_CLUSTER          NodeFieldType = 1
	NodeFieldType_NODE_LOCALITY_REGION  NodeFieldType = 2
	NodeFieldType_NODE_LOCALITY_ZONE    NodeFieldType = 3
	NodeFieldType_NODE_LOCALITY_SUBZONE NodeFieldType = 4
)

var NodeFieldType_name = map[int32]string{
	0: "NODE_ID",
	1: "NODE_CLUSTER",
	2: "NODE_LOCALITY_REGION",
	3: "NODE_LOCALITY_ZONE",
	4: "NODE_LOCALITY_SUBZONE",
}

var NodeFieldType_value = map[string]int32{
	"NODE_ID":               0,
	"NODE_CLUSTER":          1,
	"NODE_LOCALITY_REGION":  2,
	"NODE_LOCALITY_ZONE":    3,
	"NODE_LOCALITY_SUBZONE": 4,
}

func (x NodeFieldType) String() string {
	return proto.EnumName(NodeFieldType_name, int32(x))
}

func (NodeFieldType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_639753e9b9320735, []int{0}
}

// [#next-free-field: 3]
type KeyerConfiguration struct {
	// Separator for each key fragment. Default if not specified is "_".
	FragmentsSeparator string `protobuf:"bytes,1,opt,name=fragments_separator,json=fragmentsSeparator,proto3" json:"fragments_separator,omitempty"`
	// Fragments are the pieces that form a cache key.
	Fragments            []*KeyerConfiguration_Fragment `protobuf:"bytes,2,rep,name=fragments,proto3" json:"fragments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *KeyerConfiguration) Reset()         { *m = KeyerConfiguration{} }
func (m *KeyerConfiguration) String() string { return proto.CompactTextString(m) }
func (*KeyerConfiguration) ProtoMessage()    {}
func (*KeyerConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_639753e9b9320735, []int{0}
}

func (m *KeyerConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyerConfiguration.Unmarshal(m, b)
}
func (m *KeyerConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyerConfiguration.Marshal(b, m, deterministic)
}
func (m *KeyerConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyerConfiguration.Merge(m, src)
}
func (m *KeyerConfiguration) XXX_Size() int {
	return xxx_messageInfo_KeyerConfiguration.Size(m)
}
func (m *KeyerConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyerConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_KeyerConfiguration proto.InternalMessageInfo

func (m *KeyerConfiguration) GetFragmentsSeparator() string {
	if m != nil {
		return m.FragmentsSeparator
	}
	return ""
}

func (m *KeyerConfiguration) GetFragments() []*KeyerConfiguration_Fragment {
	if m != nil {
		return m.Fragments
	}
	return nil
}

// [#next-free-field: 2]
type KeyerConfiguration_Fragment struct {
	// The first rule that matches will be applied in sequential order.
	Rules                []*KeyerConfiguration_Fragment_Rule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *KeyerConfiguration_Fragment) Reset()         { *m = KeyerConfiguration_Fragment{} }
func (m *KeyerConfiguration_Fragment) String() string { return proto.CompactTextString(m) }
func (*KeyerConfiguration_Fragment) ProtoMessage()    {}
func (*KeyerConfiguration_Fragment) Descriptor() ([]byte, []int) {
	return fileDescriptor_639753e9b9320735, []int{0, 0}
}

func (m *KeyerConfiguration_Fragment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyerConfiguration_Fragment.Unmarshal(m, b)
}
func (m *KeyerConfiguration_Fragment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyerConfiguration_Fragment.Marshal(b, m, deterministic)
}
func (m *KeyerConfiguration_Fragment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyerConfiguration_Fragment.Merge(m, src)
}
func (m *KeyerConfiguration_Fragment) XXX_Size() int {
	return xxx_messageInfo_KeyerConfiguration_Fragment.Size(m)
}
func (m *KeyerConfiguration_Fragment) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyerConfiguration_Fragment.DiscardUnknown(m)
}

var xxx_messageInfo_KeyerConfiguration_Fragment proto.InternalMessageInfo

func (m *KeyerConfiguration_Fragment) GetRules() []*KeyerConfiguration_Fragment_Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

// A rule defining how to match a Envoy request and what resulting
// fragment to generate.
// [#next-free-field: 3]
type KeyerConfiguration_Fragment_Rule struct {
	// Defines how to match an Envoy Request.
	Match *MatchPredicate `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	// Defines how to generate the resulting fragment if matched.
	Result               *ResultPredicate `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *KeyerConfiguration_Fragment_Rule) Reset()         { *m = KeyerConfiguration_Fragment_Rule{} }
func (m *KeyerConfiguration_Fragment_Rule) String() string { return proto.CompactTextString(m) }
func (*KeyerConfiguration_Fragment_Rule) ProtoMessage()    {}
func (*KeyerConfiguration_Fragment_Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_639753e9b9320735, []int{0, 0, 0}
}

func (m *KeyerConfiguration_Fragment_Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyerConfiguration_Fragment_Rule.Unmarshal(m, b)
}
func (m *KeyerConfiguration_Fragment_Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyerConfiguration_Fragment_Rule.Marshal(b, m, deterministic)
}
func (m *KeyerConfiguration_Fragment_Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyerConfiguration_Fragment_Rule.Merge(m, src)
}
func (m *KeyerConfiguration_Fragment_Rule) XXX_Size() int {
	return xxx_messageInfo_KeyerConfiguration_Fragment_Rule.Size(m)
}
func (m *KeyerConfiguration_Fragment_Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyerConfiguration_Fragment_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_KeyerConfiguration_Fragment_Rule proto.InternalMessageInfo

func (m *KeyerConfiguration_Fragment_Rule) GetMatch() *MatchPredicate {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *KeyerConfiguration_Fragment_Rule) GetResult() *ResultPredicate {
	if m != nil {
		return m.Result
	}
	return nil
}

// This is a recursive structure which allows complex nested match
// configurations to be built using various logical operators.
// [#next-free-field: 7]
type MatchPredicate struct {
	// Types that are valid to be assigned to Type:
	//	*MatchPredicate_AndMatch
	//	*MatchPredicate_OrMatch
	//	*MatchPredicate_NotMatch
	//	*MatchPredicate_AnyMatch
	//	*MatchPredicate_RequestTypeMatch_
	//	*MatchPredicate_RequestNodeMatch_
	Type                 isMatchPredicate_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MatchPredicate) Reset()         { *m = MatchPredicate{} }
func (m *MatchPredicate) String() string { return proto.CompactTextString(m) }
func (*MatchPredicate) ProtoMessage()    {}
func (*MatchPredicate) Descriptor() ([]byte, []int) {
	return fileDescriptor_639753e9b9320735, []int{1}
}

func (m *MatchPredicate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchPredicate.Unmarshal(m, b)
}
func (m *MatchPredicate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchPredicate.Marshal(b, m, deterministic)
}
func (m *MatchPredicate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchPredicate.Merge(m, src)
}
func (m *MatchPredicate) XXX_Size() int {
	return xxx_messageInfo_MatchPredicate.Size(m)
}
func (m *MatchPredicate) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchPredicate.DiscardUnknown(m)
}

var xxx_messageInfo_MatchPredicate proto.InternalMessageInfo

type isMatchPredicate_Type interface {
	isMatchPredicate_Type()
}

type MatchPredicate_AndMatch struct {
	AndMatch *MatchPredicate_MatchSet `protobuf:"bytes,1,opt,name=and_match,json=andMatch,proto3,oneof"`
}

type MatchPredicate_OrMatch struct {
	OrMatch *MatchPredicate_MatchSet `protobuf:"bytes,2,opt,name=or_match,json=orMatch,proto3,oneof"`
}

type MatchPredicate_NotMatch struct {
	NotMatch *MatchPredicate `protobuf:"bytes,3,opt,name=not_match,json=notMatch,proto3,oneof"`
}

type MatchPredicate_AnyMatch struct {
	AnyMatch bool `protobuf:"varint,4,opt,name=any_match,json=anyMatch,proto3,oneof"`
}

type MatchPredicate_RequestTypeMatch_ struct {
	RequestTypeMatch *MatchPredicate_RequestTypeMatch `protobuf:"bytes,5,opt,name=request_type_match,json=requestTypeMatch,proto3,oneof"`
}

type MatchPredicate_RequestNodeMatch_ struct {
	RequestNodeMatch *MatchPredicate_RequestNodeMatch `protobuf:"bytes,6,opt,name=request_node_match,json=requestNodeMatch,proto3,oneof"`
}

func (*MatchPredicate_AndMatch) isMatchPredicate_Type() {}

func (*MatchPredicate_OrMatch) isMatchPredicate_Type() {}

func (*MatchPredicate_NotMatch) isMatchPredicate_Type() {}

func (*MatchPredicate_AnyMatch) isMatchPredicate_Type() {}

func (*MatchPredicate_RequestTypeMatch_) isMatchPredicate_Type() {}

func (*MatchPredicate_RequestNodeMatch_) isMatchPredicate_Type() {}

func (m *MatchPredicate) GetType() isMatchPredicate_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *MatchPredicate) GetAndMatch() *MatchPredicate_MatchSet {
	if x, ok := m.GetType().(*MatchPredicate_AndMatch); ok {
		return x.AndMatch
	}
	return nil
}

func (m *MatchPredicate) GetOrMatch() *MatchPredicate_MatchSet {
	if x, ok := m.GetType().(*MatchPredicate_OrMatch); ok {
		return x.OrMatch
	}
	return nil
}

func (m *MatchPredicate) GetNotMatch() *MatchPredicate {
	if x, ok := m.GetType().(*MatchPredicate_NotMatch); ok {
		return x.NotMatch
	}
	return nil
}

func (m *MatchPredicate) GetAnyMatch() bool {
	if x, ok := m.GetType().(*MatchPredicate_AnyMatch); ok {
		return x.AnyMatch
	}
	return false
}

func (m *MatchPredicate) GetRequestTypeMatch() *MatchPredicate_RequestTypeMatch {
	if x, ok := m.GetType().(*MatchPredicate_RequestTypeMatch_); ok {
		return x.RequestTypeMatch
	}
	return nil
}

func (m *MatchPredicate) GetRequestNodeMatch() *MatchPredicate_RequestNodeMatch {
	if x, ok := m.GetType().(*MatchPredicate_RequestNodeMatch_); ok {
		return x.RequestNodeMatch
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MatchPredicate) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MatchPredicate_AndMatch)(nil),
		(*MatchPredicate_OrMatch)(nil),
		(*MatchPredicate_NotMatch)(nil),
		(*MatchPredicate_AnyMatch)(nil),
		(*MatchPredicate_RequestTypeMatch_)(nil),
		(*MatchPredicate_RequestNodeMatch_)(nil),
	}
}

// Rules for matching on a Envoy request type.
// [#next-free-field: 2]
type MatchPredicate_RequestTypeMatch struct {
	// One or more Envoy request types to match on.
	// Ex: "type.googleapis.com/envoy.api.v2.Listener"
	Types                []string `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchPredicate_RequestTypeMatch) Reset()         { *m = MatchPredicate_RequestTypeMatch{} }
func (m *MatchPredicate_RequestTypeMatch) String() string { return proto.CompactTextString(m) }
func (*MatchPredicate_RequestTypeMatch) ProtoMessage()    {}
func (*MatchPredicate_RequestTypeMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_639753e9b9320735, []int{1, 0}
}

func (m *MatchPredicate_RequestTypeMatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchPredicate_RequestTypeMatch.Unmarshal(m, b)
}
func (m *MatchPredicate_RequestTypeMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchPredicate_RequestTypeMatch.Marshal(b, m, deterministic)
}
func (m *MatchPredicate_RequestTypeMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchPredicate_RequestTypeMatch.Merge(m, src)
}
func (m *MatchPredicate_RequestTypeMatch) XXX_Size() int {
	return xxx_messageInfo_MatchPredicate_RequestTypeMatch.Size(m)
}
func (m *MatchPredicate_RequestTypeMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchPredicate_RequestTypeMatch.DiscardUnknown(m)
}

var xxx_messageInfo_MatchPredicate_RequestTypeMatch proto.InternalMessageInfo

func (m *MatchPredicate_RequestTypeMatch) GetTypes() []string {
	if m != nil {
		return m.Types
	}
	return nil
}

// Match on a Field in Envoy's request node.
// [#next-free-field: 4]
type MatchPredicate_RequestNodeMatch struct {
	// Specifies the Envoy Request field that should be matched on.
	Field NodeFieldType `protobuf:"varint,1,opt,name=field,proto3,enum=aggregation.NodeFieldType" json:"field,omitempty"`
	// Types that are valid to be assigned to Type:
	//	*MatchPredicate_RequestNodeMatch_ExactMatch
	//	*MatchPredicate_RequestNodeMatch_RegexMatch
	Type                 isMatchPredicate_RequestNodeMatch_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *MatchPredicate_RequestNodeMatch) Reset()         { *m = MatchPredicate_RequestNodeMatch{} }
func (m *MatchPredicate_RequestNodeMatch) String() string { return proto.CompactTextString(m) }
func (*MatchPredicate_RequestNodeMatch) ProtoMessage()    {}
func (*MatchPredicate_RequestNodeMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_639753e9b9320735, []int{1, 1}
}

func (m *MatchPredicate_RequestNodeMatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchPredicate_RequestNodeMatch.Unmarshal(m, b)
}
func (m *MatchPredicate_RequestNodeMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchPredicate_RequestNodeMatch.Marshal(b, m, deterministic)
}
func (m *MatchPredicate_RequestNodeMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchPredicate_RequestNodeMatch.Merge(m, src)
}
func (m *MatchPredicate_RequestNodeMatch) XXX_Size() int {
	return xxx_messageInfo_MatchPredicate_RequestNodeMatch.Size(m)
}
func (m *MatchPredicate_RequestNodeMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchPredicate_RequestNodeMatch.DiscardUnknown(m)
}

var xxx_messageInfo_MatchPredicate_RequestNodeMatch proto.InternalMessageInfo

func (m *MatchPredicate_RequestNodeMatch) GetField() NodeFieldType {
	if m != nil {
		return m.Field
	}
	return NodeFieldType_NODE_ID
}

type isMatchPredicate_RequestNodeMatch_Type interface {
	isMatchPredicate_RequestNodeMatch_Type()
}

type MatchPredicate_RequestNodeMatch_ExactMatch struct {
	ExactMatch string `protobuf:"bytes,2,opt,name=exact_match,json=exactMatch,proto3,oneof"`
}

type MatchPredicate_RequestNodeMatch_RegexMatch struct {
	RegexMatch string `protobuf:"bytes,3,opt,name=regex_match,json=regexMatch,proto3,oneof"`
}

func (*MatchPredicate_RequestNodeMatch_ExactMatch) isMatchPredicate_RequestNodeMatch_Type() {}

func (*MatchPredicate_RequestNodeMatch_RegexMatch) isMatchPredicate_RequestNodeMatch_Type() {}

func (m *MatchPredicate_RequestNodeMatch) GetType() isMatchPredicate_RequestNodeMatch_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *MatchPredicate_RequestNodeMatch) GetExactMatch() string {
	if x, ok := m.GetType().(*MatchPredicate_RequestNodeMatch_ExactMatch); ok {
		return x.ExactMatch
	}
	return ""
}

func (m *MatchPredicate_RequestNodeMatch) GetRegexMatch() string {
	if x, ok := m.GetType().(*MatchPredicate_RequestNodeMatch_RegexMatch); ok {
		return x.RegexMatch
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MatchPredicate_RequestNodeMatch) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MatchPredicate_RequestNodeMatch_ExactMatch)(nil),
		(*MatchPredicate_RequestNodeMatch_RegexMatch)(nil),
	}
}

// A set of match configurations used for logical operations.
// [#next-free-field: 2]
type MatchPredicate_MatchSet struct {
	// The list of rules that make up the set.
	Rules                []*MatchPredicate `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MatchPredicate_MatchSet) Reset()         { *m = MatchPredicate_MatchSet{} }
func (m *MatchPredicate_MatchSet) String() string { return proto.CompactTextString(m) }
func (*MatchPredicate_MatchSet) ProtoMessage()    {}
func (*MatchPredicate_MatchSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_639753e9b9320735, []int{1, 2}
}

func (m *MatchPredicate_MatchSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchPredicate_MatchSet.Unmarshal(m, b)
}
func (m *MatchPredicate_MatchSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchPredicate_MatchSet.Marshal(b, m, deterministic)
}
func (m *MatchPredicate_MatchSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchPredicate_MatchSet.Merge(m, src)
}
func (m *MatchPredicate_MatchSet) XXX_Size() int {
	return xxx_messageInfo_MatchPredicate_MatchSet.Size(m)
}
func (m *MatchPredicate_MatchSet) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchPredicate_MatchSet.DiscardUnknown(m)
}

var xxx_messageInfo_MatchPredicate_MatchSet proto.InternalMessageInfo

func (m *MatchPredicate_MatchSet) GetRules() []*MatchPredicate {
	if m != nil {
		return m.Rules
	}
	return nil
}

// Rules for how to generate the resulting fragment of the xDS Aggregator cache
// key.
// [#next-free-field: 5]
type ResultPredicate struct {
	// Types that are valid to be assigned to Type:
	//	*ResultPredicate_ResultPredicate
	//	*ResultPredicate_RequestNodeFragment_
	//	*ResultPredicate_ResourceNamesFragment_
	//	*ResultPredicate_StringFragment
	Type                 isResultPredicate_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ResultPredicate) Reset()         { *m = ResultPredicate{} }
func (m *ResultPredicate) String() string { return proto.CompactTextString(m) }
func (*ResultPredicate) ProtoMessage()    {}
func (*ResultPredicate) Descriptor() ([]byte, []int) {
	return fileDescriptor_639753e9b9320735, []int{2}
}

func (m *ResultPredicate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultPredicate.Unmarshal(m, b)
}
func (m *ResultPredicate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultPredicate.Marshal(b, m, deterministic)
}
func (m *ResultPredicate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultPredicate.Merge(m, src)
}
func (m *ResultPredicate) XXX_Size() int {
	return xxx_messageInfo_ResultPredicate.Size(m)
}
func (m *ResultPredicate) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultPredicate.DiscardUnknown(m)
}

var xxx_messageInfo_ResultPredicate proto.InternalMessageInfo

type isResultPredicate_Type interface {
	isResultPredicate_Type()
}

type ResultPredicate_ResultPredicate struct {
	ResultPredicate *ResultPredicate_RepeatedResultPredicate `protobuf:"bytes,1,opt,name=result_predicate,json=resultPredicate,proto3,oneof"`
}

type ResultPredicate_RequestNodeFragment_ struct {
	RequestNodeFragment *ResultPredicate_RequestNodeFragment `protobuf:"bytes,2,opt,name=request_node_fragment,json=requestNodeFragment,proto3,oneof"`
}

type ResultPredicate_ResourceNamesFragment_ struct {
	ResourceNamesFragment *ResultPredicate_ResourceNamesFragment `protobuf:"bytes,3,opt,name=resource_names_fragment,json=resourceNamesFragment,proto3,oneof"`
}

type ResultPredicate_StringFragment struct {
	StringFragment string `protobuf:"bytes,4,opt,name=string_fragment,json=stringFragment,proto3,oneof"`
}

func (*ResultPredicate_ResultPredicate) isResultPredicate_Type() {}

func (*ResultPredicate_RequestNodeFragment_) isResultPredicate_Type() {}

func (*ResultPredicate_ResourceNamesFragment_) isResultPredicate_Type() {}

func (*ResultPredicate_StringFragment) isResultPredicate_Type() {}

func (m *ResultPredicate) GetType() isResultPredicate_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ResultPredicate) GetResultPredicate() *ResultPredicate_RepeatedResultPredicate {
	if x, ok := m.GetType().(*ResultPredicate_ResultPredicate); ok {
		return x.ResultPredicate
	}
	return nil
}

func (m *ResultPredicate) GetRequestNodeFragment() *ResultPredicate_RequestNodeFragment {
	if x, ok := m.GetType().(*ResultPredicate_RequestNodeFragment_); ok {
		return x.RequestNodeFragment
	}
	return nil
}

func (m *ResultPredicate) GetResourceNamesFragment() *ResultPredicate_ResourceNamesFragment {
	if x, ok := m.GetType().(*ResultPredicate_ResourceNamesFragment_); ok {
		return x.ResourceNamesFragment
	}
	return nil
}

func (m *ResultPredicate) GetStringFragment() string {
	if x, ok := m.GetType().(*ResultPredicate_StringFragment); ok {
		return x.StringFragment
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ResultPredicate) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ResultPredicate_ResultPredicate)(nil),
		(*ResultPredicate_RequestNodeFragment_)(nil),
		(*ResultPredicate_ResourceNamesFragment_)(nil),
		(*ResultPredicate_StringFragment)(nil),
	}
}

type ResultPredicate_ResultAction struct {
	// Types that are valid to be assigned to Action:
	//	*ResultPredicate_ResultAction_Exact
	//	*ResultPredicate_ResultAction_RegexAction_
	Action               isResultPredicate_ResultAction_Action `protobuf_oneof:"action"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *ResultPredicate_ResultAction) Reset()         { *m = ResultPredicate_ResultAction{} }
func (m *ResultPredicate_ResultAction) String() string { return proto.CompactTextString(m) }
func (*ResultPredicate_ResultAction) ProtoMessage()    {}
func (*ResultPredicate_ResultAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_639753e9b9320735, []int{2, 0}
}

func (m *ResultPredicate_ResultAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultPredicate_ResultAction.Unmarshal(m, b)
}
func (m *ResultPredicate_ResultAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultPredicate_ResultAction.Marshal(b, m, deterministic)
}
func (m *ResultPredicate_ResultAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultPredicate_ResultAction.Merge(m, src)
}
func (m *ResultPredicate_ResultAction) XXX_Size() int {
	return xxx_messageInfo_ResultPredicate_ResultAction.Size(m)
}
func (m *ResultPredicate_ResultAction) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultPredicate_ResultAction.DiscardUnknown(m)
}

var xxx_messageInfo_ResultPredicate_ResultAction proto.InternalMessageInfo

type isResultPredicate_ResultAction_Action interface {
	isResultPredicate_ResultAction_Action()
}

type ResultPredicate_ResultAction_Exact struct {
	Exact bool `protobuf:"varint,1,opt,name=exact,proto3,oneof"`
}

type ResultPredicate_ResultAction_RegexAction_ struct {
	RegexAction *ResultPredicate_ResultAction_RegexAction `protobuf:"bytes,2,opt,name=regex_action,json=regexAction,proto3,oneof"`
}

func (*ResultPredicate_ResultAction_Exact) isResultPredicate_ResultAction_Action() {}

func (*ResultPredicate_ResultAction_RegexAction_) isResultPredicate_ResultAction_Action() {}

func (m *ResultPredicate_ResultAction) GetAction() isResultPredicate_ResultAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *ResultPredicate_ResultAction) GetExact() bool {
	if x, ok := m.GetAction().(*ResultPredicate_ResultAction_Exact); ok {
		return x.Exact
	}
	return false
}

func (m *ResultPredicate_ResultAction) GetRegexAction() *ResultPredicate_ResultAction_RegexAction {
	if x, ok := m.GetAction().(*ResultPredicate_ResultAction_RegexAction_); ok {
		return x.RegexAction
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ResultPredicate_ResultAction) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ResultPredicate_ResultAction_Exact)(nil),
		(*ResultPredicate_ResultAction_RegexAction_)(nil),
	}
}

// TODO potentially use "safe regex"
// https://github.com/envoyproxy/envoy/blob/10f756efa17e56c8d4d1033be7b4286410db4e01/api/envoy/type/matcher/v3/regex.proto
// [#next-free-field: 3]
type ResultPredicate_ResultAction_RegexAction struct {
	Pattern              string   `protobuf:"bytes,1,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Replace              string   `protobuf:"bytes,2,opt,name=replace,proto3" json:"replace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultPredicate_ResultAction_RegexAction) Reset() {
	*m = ResultPredicate_ResultAction_RegexAction{}
}
func (m *ResultPredicate_ResultAction_RegexAction) String() string { return proto.CompactTextString(m) }
func (*ResultPredicate_ResultAction_RegexAction) ProtoMessage()    {}
func (*ResultPredicate_ResultAction_RegexAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_639753e9b9320735, []int{2, 0, 0}
}

func (m *ResultPredicate_ResultAction_RegexAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultPredicate_ResultAction_RegexAction.Unmarshal(m, b)
}
func (m *ResultPredicate_ResultAction_RegexAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultPredicate_ResultAction_RegexAction.Marshal(b, m, deterministic)
}
func (m *ResultPredicate_ResultAction_RegexAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultPredicate_ResultAction_RegexAction.Merge(m, src)
}
func (m *ResultPredicate_ResultAction_RegexAction) XXX_Size() int {
	return xxx_messageInfo_ResultPredicate_ResultAction_RegexAction.Size(m)
}
func (m *ResultPredicate_ResultAction_RegexAction) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultPredicate_ResultAction_RegexAction.DiscardUnknown(m)
}

var xxx_messageInfo_ResultPredicate_ResultAction_RegexAction proto.InternalMessageInfo

func (m *ResultPredicate_ResultAction_RegexAction) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *ResultPredicate_ResultAction_RegexAction) GetReplace() string {
	if m != nil {
		return m.Replace
	}
	return ""
}

// Rules for generating the resulting fragment from a Envoy request node.
// [#next-free-field: 3]
type ResultPredicate_RequestNodeFragment struct {
	Field                NodeFieldType                 `protobuf:"varint,1,opt,name=field,proto3,enum=aggregation.NodeFieldType" json:"field,omitempty"`
	Action               *ResultPredicate_ResultAction `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ResultPredicate_RequestNodeFragment) Reset()         { *m = ResultPredicate_RequestNodeFragment{} }
func (m *ResultPredicate_RequestNodeFragment) String() string { return proto.CompactTextString(m) }
func (*ResultPredicate_RequestNodeFragment) ProtoMessage()    {}
func (*ResultPredicate_RequestNodeFragment) Descriptor() ([]byte, []int) {
	return fileDescriptor_639753e9b9320735, []int{2, 1}
}

func (m *ResultPredicate_RequestNodeFragment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultPredicate_RequestNodeFragment.Unmarshal(m, b)
}
func (m *ResultPredicate_RequestNodeFragment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultPredicate_RequestNodeFragment.Marshal(b, m, deterministic)
}
func (m *ResultPredicate_RequestNodeFragment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultPredicate_RequestNodeFragment.Merge(m, src)
}
func (m *ResultPredicate_RequestNodeFragment) XXX_Size() int {
	return xxx_messageInfo_ResultPredicate_RequestNodeFragment.Size(m)
}
func (m *ResultPredicate_RequestNodeFragment) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultPredicate_RequestNodeFragment.DiscardUnknown(m)
}

var xxx_messageInfo_ResultPredicate_RequestNodeFragment proto.InternalMessageInfo

func (m *ResultPredicate_RequestNodeFragment) GetField() NodeFieldType {
	if m != nil {
		return m.Field
	}
	return NodeFieldType_NODE_ID
}

func (m *ResultPredicate_RequestNodeFragment) GetAction() *ResultPredicate_ResultAction {
	if m != nil {
		return m.Action
	}
	return nil
}

// Rules for generating the resulting fragment from Envoy request names.
// [#next-free-field: 4]
type ResultPredicate_ResourceNamesFragment struct {
	Field NodeFieldType `protobuf:"varint,1,opt,name=field,proto3,enum=aggregation.NodeFieldType" json:"field,omitempty"`
	// The index of the resource name to operate on.
	// TODO support operation on multiple elements once we move past the MVP.
	Element              int32                         `protobuf:"varint,2,opt,name=element,proto3" json:"element,omitempty"`
	Action               *ResultPredicate_ResultAction `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ResultPredicate_ResourceNamesFragment) Reset()         { *m = ResultPredicate_ResourceNamesFragment{} }
func (m *ResultPredicate_ResourceNamesFragment) String() string { return proto.CompactTextString(m) }
func (*ResultPredicate_ResourceNamesFragment) ProtoMessage()    {}
func (*ResultPredicate_ResourceNamesFragment) Descriptor() ([]byte, []int) {
	return fileDescriptor_639753e9b9320735, []int{2, 2}
}

func (m *ResultPredicate_ResourceNamesFragment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultPredicate_ResourceNamesFragment.Unmarshal(m, b)
}
func (m *ResultPredicate_ResourceNamesFragment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultPredicate_ResourceNamesFragment.Marshal(b, m, deterministic)
}
func (m *ResultPredicate_ResourceNamesFragment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultPredicate_ResourceNamesFragment.Merge(m, src)
}
func (m *ResultPredicate_ResourceNamesFragment) XXX_Size() int {
	return xxx_messageInfo_ResultPredicate_ResourceNamesFragment.Size(m)
}
func (m *ResultPredicate_ResourceNamesFragment) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultPredicate_ResourceNamesFragment.DiscardUnknown(m)
}

var xxx_messageInfo_ResultPredicate_ResourceNamesFragment proto.InternalMessageInfo

func (m *ResultPredicate_ResourceNamesFragment) GetField() NodeFieldType {
	if m != nil {
		return m.Field
	}
	return NodeFieldType_NODE_ID
}

func (m *ResultPredicate_ResourceNamesFragment) GetElement() int32 {
	if m != nil {
		return m.Element
	}
	return 0
}

func (m *ResultPredicate_ResourceNamesFragment) GetAction() *ResultPredicate_ResultAction {
	if m != nil {
		return m.Action
	}
	return nil
}

type ResultPredicate_RepeatedResultPredicate struct {
	AndResult            []*ResultPredicate `protobuf:"bytes,1,rep,name=and_result,json=andResult,proto3" json:"and_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ResultPredicate_RepeatedResultPredicate) Reset() {
	*m = ResultPredicate_RepeatedResultPredicate{}
}
func (m *ResultPredicate_RepeatedResultPredicate) String() string { return proto.CompactTextString(m) }
func (*ResultPredicate_RepeatedResultPredicate) ProtoMessage()    {}
func (*ResultPredicate_RepeatedResultPredicate) Descriptor() ([]byte, []int) {
	return fileDescriptor_639753e9b9320735, []int{2, 3}
}

func (m *ResultPredicate_RepeatedResultPredicate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultPredicate_RepeatedResultPredicate.Unmarshal(m, b)
}
func (m *ResultPredicate_RepeatedResultPredicate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultPredicate_RepeatedResultPredicate.Marshal(b, m, deterministic)
}
func (m *ResultPredicate_RepeatedResultPredicate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultPredicate_RepeatedResultPredicate.Merge(m, src)
}
func (m *ResultPredicate_RepeatedResultPredicate) XXX_Size() int {
	return xxx_messageInfo_ResultPredicate_RepeatedResultPredicate.Size(m)
}
func (m *ResultPredicate_RepeatedResultPredicate) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultPredicate_RepeatedResultPredicate.DiscardUnknown(m)
}

var xxx_messageInfo_ResultPredicate_RepeatedResultPredicate proto.InternalMessageInfo

func (m *ResultPredicate_RepeatedResultPredicate) GetAndResult() []*ResultPredicate {
	if m != nil {
		return m.AndResult
	}
	return nil
}

func init() {
	proto.RegisterEnum("aggregation.NodeFieldType", NodeFieldType_name, NodeFieldType_value)
	proto.RegisterType((*KeyerConfiguration)(nil), "aggregation.KeyerConfiguration")
	proto.RegisterType((*KeyerConfiguration_Fragment)(nil), "aggregation.KeyerConfiguration.Fragment")
	proto.RegisterType((*KeyerConfiguration_Fragment_Rule)(nil), "aggregation.KeyerConfiguration.Fragment.Rule")
	proto.RegisterType((*MatchPredicate)(nil), "aggregation.MatchPredicate")
	proto.RegisterType((*MatchPredicate_RequestTypeMatch)(nil), "aggregation.MatchPredicate.RequestTypeMatch")
	proto.RegisterType((*MatchPredicate_RequestNodeMatch)(nil), "aggregation.MatchPredicate.RequestNodeMatch")
	proto.RegisterType((*MatchPredicate_MatchSet)(nil), "aggregation.MatchPredicate.MatchSet")
	proto.RegisterType((*ResultPredicate)(nil), "aggregation.ResultPredicate")
	proto.RegisterType((*ResultPredicate_ResultAction)(nil), "aggregation.ResultPredicate.ResultAction")
	proto.RegisterType((*ResultPredicate_ResultAction_RegexAction)(nil), "aggregation.ResultPredicate.ResultAction.RegexAction")
	proto.RegisterType((*ResultPredicate_RequestNodeFragment)(nil), "aggregation.ResultPredicate.RequestNodeFragment")
	proto.RegisterType((*ResultPredicate_ResourceNamesFragment)(nil), "aggregation.ResultPredicate.ResourceNamesFragment")
	proto.RegisterType((*ResultPredicate_RepeatedResultPredicate)(nil), "aggregation.ResultPredicate.RepeatedResultPredicate")
}

func init() {
	proto.RegisterFile("xdsrelay/aggregation/v1/aggregation.proto", fileDescriptor_639753e9b9320735)
}

var fileDescriptor_639753e9b9320735 = []byte{
	// 895 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0x41, 0x6f, 0xe3, 0x44,
	0x14, 0xce, 0x38, 0x71, 0xe3, 0xbc, 0x74, 0x5b, 0x6b, 0x4a, 0x69, 0x30, 0x08, 0xba, 0x11, 0x42,
	0x2d, 0x82, 0x14, 0x02, 0x5c, 0x16, 0x09, 0xa9, 0xee, 0x66, 0x37, 0xd5, 0x76, 0xd3, 0xd5, 0xb4,
	0x3d, 0xb0, 0x42, 0x0a, 0x43, 0x3c, 0x0d, 0x41, 0xae, 0x6d, 0xc6, 0x93, 0x55, 0x23, 0x6e, 0x70,
	0xe3, 0xc8, 0x0f, 0xe0, 0xce, 0xbf, 0xe0, 0xc0, 0xff, 0xe0, 0x1f, 0x20, 0x71, 0x83, 0x9e, 0xd0,
	0xcc, 0xd8, 0xee, 0x38, 0x2d, 0x4d, 0x56, 0x7b, 0xf3, 0xbc, 0xef, 0x7d, 0xdf, 0x7b, 0x33, 0xf3,
	0xde, 0x1b, 0xc3, 0xee, 0x65, 0x90, 0x72, 0x16, 0xd2, 0xd9, 0x1e, 0x1d, 0x8f, 0x39, 0x1b, 0x53,
	0x31, 0x89, 0xa3, 0xbd, 0x17, 0x1f, 0x9b, 0xcb, 0x4e, 0xc2, 0x63, 0x11, 0xe3, 0xa6, 0x61, 0xf2,
	0xb6, 0x5e, 0xd0, 0x70, 0x12, 0x50, 0xc1, 0xf6, 0xf2, 0x0f, 0xed, 0xd5, 0xfe, 0xd7, 0x02, 0xfc,
	0x84, 0xcd, 0x18, 0x3f, 0x88, 0xa3, 0xf3, 0xc9, 0x78, 0xca, 0x95, 0x3f, 0xde, 0x83, 0x8d, 0x73,
	0x4e, 0xc7, 0x17, 0x2c, 0x12, 0xe9, 0x30, 0x65, 0x09, 0xe5, 0x54, 0xc4, 0xbc, 0x85, 0xb6, 0xd1,
	0x4e, 0x83, 0xe0, 0x02, 0x3a, 0xc9, 0x11, 0xfc, 0x0c, 0x1a, 0x85, 0xb5, 0x65, 0x6d, 0x57, 0x77,
	0x9a, 0xdd, 0x9d, 0x8e, 0x99, 0xd4, 0xcd, 0x20, 0x9d, 0x47, 0x19, 0xc1, 0x77, 0xae, 0x7c, 0xfb,
	0x17, 0x64, 0x39, 0x88, 0x5c, 0x8b, 0x78, 0x7f, 0x22, 0x70, 0x72, 0x0f, 0xfc, 0x14, 0x6c, 0x3e,
	0x0d, 0x59, 0xda, 0x42, 0x4a, 0xfa, 0xc3, 0x65, 0xa5, 0x3b, 0x64, 0x1a, 0x32, 0x43, 0x5f, 0xab,
	0x78, 0x3f, 0x21, 0xa8, 0x49, 0x04, 0x7f, 0x0e, 0xf6, 0x05, 0x15, 0xa3, 0x6f, 0xd5, 0xce, 0x9a,
	0xdd, 0x37, 0x4b, 0xba, 0x4f, 0x25, 0xf2, 0x8c, 0xb3, 0x60, 0x32, 0xa2, 0x42, 0xab, 0xfc, 0x8c,
	0x2c, 0x17, 0x11, 0xcd, 0xc1, 0x5f, 0xc0, 0x0a, 0x67, 0xe9, 0x34, 0x14, 0x2d, 0x4b, 0xb1, 0xdf,
	0x2a, 0xb1, 0x89, 0x82, 0x6e, 0xa3, 0x67, 0xac, 0xf6, 0x5f, 0x36, 0xac, 0x95, 0x63, 0xe0, 0x03,
	0x68, 0xd0, 0x28, 0x18, 0x9a, 0x39, 0xbd, 0x7b, 0x47, 0x4e, 0x7a, 0x79, 0xc2, 0x44, 0xbf, 0x42,
	0x1c, 0x1a, 0x05, 0x6a, 0x89, 0xf7, 0xc1, 0x89, 0x79, 0xa6, 0x61, 0xbd, 0x94, 0x46, 0x3d, 0xe6,
	0x5a, 0xe2, 0x01, 0x34, 0xa2, 0x58, 0x64, 0x1a, 0xd5, 0x85, 0x67, 0x23, 0xc3, 0x47, 0xb1, 0xd0,
	0xdc, 0xf7, 0xe4, 0x1e, 0x66, 0x19, 0xb7, 0xb6, 0x8d, 0x76, 0x1c, 0xbf, 0x7e, 0xe5, 0xd7, 0xbe,
	0xb3, 0x1c, 0xa4, 0xd3, 0x9c, 0x69, 0xbf, 0xaf, 0x00, 0x73, 0xf6, 0xfd, 0x94, 0xa5, 0x62, 0x28,
	0x66, 0x09, 0xcb, 0x08, 0xb6, 0x0a, 0xf6, 0xc1, 0x5d, 0x09, 0x13, 0xcd, 0x3a, 0x9d, 0x25, 0x4c,
	0x21, 0xfd, 0x0a, 0x71, 0xf9, 0x9c, 0xcd, 0x54, 0x8f, 0xe2, 0x20, 0x57, 0x5f, 0x59, 0x5a, 0x7d,
	0x10, 0x07, 0x37, 0xd4, 0x0b, 0x9b, 0xd7, 0x05, 0x77, 0x3e, 0x0b, 0xfc, 0x36, 0xd8, 0x72, 0x1f,
	0xba, 0x46, 0x1b, 0x66, 0xd1, 0x29, 0xb3, 0xf7, 0x1b, 0x2a, 0x48, 0x85, 0x10, 0xf6, 0xc1, 0x3e,
	0x9f, 0xb0, 0x30, 0x50, 0x97, 0xbd, 0xd6, 0xf5, 0x4a, 0x99, 0x49, 0xb7, 0x47, 0x12, 0x95, 0x41,
	0x7c, 0xf7, 0xca, 0xb7, 0x7f, 0x94, 0x05, 0x74, 0x5d, 0x87, 0x8a, 0x8a, 0xef, 0x43, 0x93, 0x5d,
	0xd2, 0x91, 0x30, 0xae, 0xbc, 0xd1, 0xaf, 0x10, 0x50, 0x46, 0x1d, 0xe6, 0x3e, 0x34, 0x39, 0x1b,
	0xb3, 0x4b, 0xe3, 0x46, 0x95, 0x8b, 0x32, 0x2a, 0x17, 0xbf, 0x09, 0x35, 0x99, 0x27, 0xae, 0xfe,
	0xe3, 0x23, 0xef, 0x31, 0x38, 0x79, 0x59, 0xc8, 0x1e, 0x31, 0x7b, 0x6f, 0x61, 0x8f, 0xc8, 0x4d,
	0x5b, 0x59, 0xa7, 0x95, 0x54, 0xdb, 0xbf, 0x3b, 0xb0, 0x3e, 0xd7, 0x16, 0x98, 0x82, 0xab, 0xdb,
	0x61, 0x98, 0xe4, 0xb6, 0xac, 0xf0, 0x3f, 0xbd, 0xab, 0x9d, 0x3a, 0x84, 0x25, 0x8c, 0x0a, 0x16,
	0xcc, 0xd9, 0xfb, 0x15, 0xb2, 0xce, 0xe7, 0x42, 0x9c, 0xc3, 0x66, 0xa9, 0x14, 0xf2, 0x19, 0x93,
	0x35, 0xc7, 0x47, 0x0b, 0xe2, 0x14, 0x37, 0x96, 0x0f, 0x95, 0x7e, 0x85, 0x6c, 0xf0, 0x9b, 0x66,
	0x1c, 0xc2, 0x16, 0x67, 0x69, 0x3c, 0xe5, 0x23, 0x36, 0x8c, 0xe8, 0x05, 0x4b, 0xaf, 0x23, 0xe9,
	0x16, 0xea, 0x2e, 0x88, 0xa4, 0xb9, 0x03, 0x49, 0x35, 0x62, 0x6d, 0xf2, 0xdb, 0x00, 0xbc, 0x0b,
	0xeb, 0xa9, 0xe0, 0x93, 0x68, 0x7c, 0x1d, 0xa5, 0x96, 0x5d, 0xeb, 0x9a, 0x06, 0x72, 0x57, 0xef,
	0x6f, 0x04, 0xab, 0x3a, 0xda, 0xfe, 0x48, 0x8d, 0xf7, 0x77, 0xc0, 0x56, 0xc5, 0xa1, 0x4e, 0xba,
	0xd4, 0x9e, 0xda, 0x8e, 0x9f, 0xc3, 0xaa, 0xae, 0x17, 0xaa, 0x08, 0xd9, 0x49, 0x7d, 0xb6, 0x28,
	0xff, 0x22, 0x42, 0x87, 0x48, 0xb6, 0xfe, 0xee, 0x57, 0x88, 0x2e, 0x3e, 0xbd, 0xf4, 0xce, 0xa0,
	0x69, 0xa0, 0xb8, 0x0d, 0xf5, 0x84, 0x0a, 0xc1, 0x78, 0xa4, 0x9f, 0x17, 0x63, 0x50, 0xe6, 0x80,
	0xf4, 0xe1, 0x2c, 0x09, 0xe9, 0x88, 0xe9, 0xea, 0x36, 0x7d, 0x32, 0xc0, 0xbf, 0x07, 0x2b, 0x3a,
	0x59, 0x5d, 0xc1, 0xbf, 0x22, 0xd8, 0xb8, 0xe5, 0xee, 0xf0, 0x83, 0xe5, 0x1b, 0xce, 0x99, 0x6f,
	0xb4, 0x27, 0x79, 0x88, 0xec, 0x3c, 0x76, 0x97, 0x3e, 0x0f, 0x73, 0xfa, 0x6b, 0x09, 0xef, 0x0f,
	0x04, 0x9b, 0xb7, 0x5e, 0xf9, 0x2b, 0xa5, 0xd8, 0x86, 0x3a, 0x0b, 0x59, 0x51, 0xdd, 0xb6, 0x79,
	0x52, 0x19, 0x60, 0x6c, 0xa3, 0xfa, 0xea, 0xdb, 0xf8, 0x1a, 0xb6, 0xfe, 0xa7, 0x15, 0x71, 0x0f,
	0x40, 0x3e, 0x66, 0xd9, 0x1b, 0xa9, 0xa7, 0xc7, 0xe2, 0x37, 0x52, 0x8f, 0x0f, 0xf9, 0x0c, 0x6a,
	0xb4, 0x34, 0x42, 0xde, 0xff, 0x01, 0xee, 0x95, 0x4e, 0x00, 0x37, 0xa1, 0x3e, 0x38, 0x7e, 0xd8,
	0x1b, 0x1e, 0x3e, 0x74, 0x2b, 0xd8, 0x85, 0x55, 0xb5, 0x38, 0x38, 0x3a, 0x3b, 0x39, 0xed, 0x11,
	0x17, 0xe1, 0x16, 0xbc, 0xa6, 0x2c, 0x47, 0xc7, 0x07, 0xfb, 0x47, 0x87, 0xa7, 0x5f, 0x0e, 0x49,
	0xef, 0xf1, 0xe1, 0xf1, 0xc0, 0xb5, 0xf0, 0xeb, 0x80, 0xcb, 0xc8, 0xf3, 0xe3, 0x41, 0xcf, 0xad,
	0xe2, 0x37, 0x60, 0xb3, 0x6c, 0x3f, 0x39, 0xf3, 0x15, 0x54, 0xfb, 0x66, 0x45, 0xfd, 0x33, 0x7d,
	0xf2, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x69, 0x66, 0x0e, 0xb7, 0x86, 0x09, 0x00, 0x00,
}
